// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∞–π—Ç–∞ - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏
const siteData = {
    photos: [
        {
            url: './image/1.jpg',
            caption: '–ó–∞–≤–æ—Ä–∞–∂–∏–≤–∞—é—â–∞—è –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞'
        },
        {
            url: './image/2.jpg',
            caption: '–®–∏–∫–∞—Ä–Ω–∞—è —Ç–µ–º–Ω–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä–æ–π –ø–æ–¥–ª–≤–∞–æ—Å—Ç–Ω–æ —á—Ç–æ —É–≥–æ–¥–Ω–æ'
        },
        {
            url: './image/6.jpg',
            caption: '–°–∏–ª–∞ –∏ –≥—Ä–∞—Ü–∏—è –≤ –∫–∞–∂–¥–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏'
        },
        {
            url: './image/4.jpg',
            caption: '–ù–µ–∂–Ω–æ—Å—Ç—å, —á—Ç–æ –∑–∞—Ç–º–µ–≤–∞–µ—Ç –ª—É–Ω–Ω—ã–π —Å–≤–µ—Ç'
        },
        {
            url: './image/5.jpg',
            caption: '–¢–≤–æ–∏ –≥–ª–∞–∑–∞ - –∑–≤—ë–∑–¥—ã –≤ –Ω–æ—á–Ω–æ–º –Ω–µ–±–µ'
        },
        {
            url: './image/3.jpg',
            caption: '–ó–∞–≥–∞–¥–æ—á–Ω–∞—è —É–ª—ã–±–∫–∞, —á—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–∞–π–Ω—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π'
        },
        {
            url: './image/8.jpg',
            caption: '–®–∏–∫–∞—Ä–Ω—ã–π, –∫–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–ª—å'
        },
        {
            url: './image/7.jpg',
            caption: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏ –ø—Ä–∏–∫–æ–ª—å–Ω–∞—è'
        }
    ],
    quotes: [
        "–¢—ã - —Å–∞–º–∞—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è —Ç–∞–π–Ω–∞ —ç—Ç–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π",
        "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –º–∞–≥–∏—è –Ω–æ—á–∏",
        "–¢–≤–æ—è –¥—É—à–∞ —Å–∏—è–µ—Ç —è—Ä—á–µ –ª—é–±–æ–π –∑–≤–µ–∑–¥—ã",
        "–¢—ã —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ –∑–≤—ë–∑–¥–Ω–æ–π –ø—ã–ª–∏ –∏ –Ω–æ—á–Ω—ã—Ö –≥—Ä—ë–∑",
        "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ - —ç—Ç–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è",
        "–í —Ç–≤–æ—ë–º —Å–µ—Ä–¥—Ü–µ –±—å—ë—Ç—Å—è —Ä–∏—Ç–º –¥—Ä–µ–≤–Ω–∏—Ö –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –º–∏—Ä–æ–≤",
        "–¢—ã - –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã",
        "–¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –¥–∞–∂–µ —Å–∞–º—ã–µ —Ç—ë–º–Ω—ã–µ —É–≥–æ–ª–∫–∏ –¥—É—à–∏"
    ]
};

// –°–æ–∑–¥–∞–Ω–∏–µ –ª–µ—Ç—É—á–∏—Ö –º—ã—à–µ–π
function createBats() {
    const container = document.getElementById('bats-container');
    const batSymbols = ['ü¶á', 'üåô', '‚ú®', '‚ö°'];

    for (let i = 0; i < 15; i++) {
        const bat = document.createElement('div');
        bat.className = 'bat';
        bat.textContent = batSymbols[Math.floor(Math.random() * batSymbols.length)];
        bat.style.left = Math.random() * 100 + 'vw';
        bat.style.top = Math.random() * 100 + 'vh';
        bat.style.animationDelay = Math.random() * 15 + 's';
        bat.style.fontSize = (Math.random() * 20 + 16) + 'px';
        container.appendChild(bat);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö —Ä–æ–∑
function createRoses() {
    setInterval(() => {
        const rose = document.createElement('div');
        rose.className = 'rose';
        rose.textContent = 'üåπ';
        rose.style.left = Math.random() * 100 + 'vw';
        rose.style.fontSize = (Math.random() * 10 + 15) + 'px';
        rose.style.animationDuration = (Math.random() * 5 + 5) + 's';
        document.body.appendChild(rose);

        setTimeout(() => {
            rose.remove();
        }, 10000);
    }, 1000);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥–∞–ª–µ—Ä–µ–∏
function loadGallery() {
    const gallery = document.getElementById('photo-gallery');

    siteData.photos.forEach((photo, index) => {
        const card = document.createElement('div');
        card.className = 'photo-card';
        card.addEventListener('click', () => openModal(photo.url));

        card.innerHTML = `
                    <img src="${photo.url}" alt="–§–æ—Ç–æ ${index + 1}" loading="lazy">
                    <div class="caption">${photo.caption}</div>
                `;

        gallery.appendChild(card);
    });
}

// –†–∞–±–æ—Ç–∞ —Å —Ü–∏—Ç–∞—Ç–∞–º–∏
let currentQuoteIndex = 0;
function showNextQuote() {
    const container = document.getElementById('quotes-container');
    container.style.opacity = '0';

    setTimeout(() => {
        currentQuoteIndex = (currentQuoteIndex + 1) % siteData.quotes.length;
        container.innerHTML = `
                    <p style="font-size: 1.3rem; text-align: center; line-height: 1.6; transition: opacity 0.5s ease;">
                        "${siteData.quotes[currentQuoteIndex]}"
                    </p>
                `;
        container.style.opacity = '1';
    }, 500);
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function openModal(imageUrl) {
    document.getElementById('modalImage').src = imageUrl;
    document.getElementById('imageModal').style.display = 'flex';
}

function closeModal() {
    document.getElementById('imageModal').style.display = 'none';
}

// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
function castSpell() {
    const buttons = document.querySelectorAll('.spell-button');
    buttons.forEach(button => {
        button.style.animation = 'glow 0.5s ease-in-out 3';
    });

    // –°–æ–∑–¥–∞—ë–º –º–∞–≥–∏—á–µ—Å–∫–∏–µ –∏—Å–∫—Ä—ã
    for (let i = 0; i < 20; i++) {
        setTimeout(() => {
            const spark = document.createElement('div');
            spark.className = 'spark';
            spark.style.left = Math.random() * 100 + 'vw';
            spark.style.top = Math.random() * 100 + 'vh';
            spark.style.background = i % 2 === 0 ? '#ff00ff' : '#8a2be2';
            spark.style.boxShadow = `0 0 20px ${i % 2 === 0 ? '#ff00ff' : '#8a2be2'}`;
            spark.style.animation = 'sparkle 1s ease-out forwards';
            document.body.appendChild(spark);

            setTimeout(() => {
                if (spark.parentNode) {
                    spark.remove();
                }
            }, 1000);
        }, i * 100);
    }

    // –°–æ–∑–¥–∞—ë–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
    try {
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = audioContext.createOscillator();
        const gainNode = audioContext.createGain();

        oscillator.connect(gainNode);
        gainNode.connect(audioContext.destination);

        oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
        oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.5);

        gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);

        oscillator.start(audioContext.currentTime);
        oscillator.stop(audioContext.currentTime + 0.5);
    } catch (e) {
        console.log('–ê—É–¥–∏–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    }

    setTimeout(() => {
        alert('‚ú® –ú–∞–≥–∏—è —Ç–≤–æ–µ–π –∫—Ä–∞—Å–æ—Ç—ã —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è! ‚ú®');
    }, 800);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function () {
    createBats();
    createRoses();
    loadGallery();
    showNextQuote();

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.getElementById('spellButton').addEventListener('click', castSpell);
    document.getElementById('quoteButton').addEventListener('click', showNextQuote);
    document.getElementById('closeModal').addEventListener('click', closeModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    document.getElementById('imageModal').addEventListener('click', function (e) {
        if (e.target === this) {
            closeModal();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ ESC
    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            closeModal();
        }
    });
});

// –ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –º—ã—à–µ–π
document.addEventListener('mousemove', function (e) {
    const bats = document.querySelectorAll('.bat');
    const x = e.clientX / window.innerWidth;
    const y = e.clientY / window.innerHeight;

    bats.forEach((bat, index) => {
        const speed = (index + 1) * 0.0002;
        const xMove = (x - 0.5) * speed * window.innerWidth;
        const yMove = (y - 0.5) * speed * window.innerHeight;

        const currentTransform = bat.style.transform || '';
        bat.style.transform = currentTransform + ` translate(${xMove}px, ${yMove}px)`;
    });
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ç–æ-–∫–∞—Ä—Ç–æ—á–µ–∫ (–Ω–∞ —Å–ª—É—á–∞–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏)
document.addEventListener('click', function (e) {
    if (e.target.closest('.photo-card')) {
        const img = e.target.closest('.photo-card').querySelector('img');
        if (img) {
            openModal(img.src);
        }
    }
});